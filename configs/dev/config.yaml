# Sentinel Mesh Development Configuration

# Server configuration
server:
  host: "0.0.0.0"
  port: 8080
  read_timeout: "30s"
  write_timeout: "30s"
  idle_timeout: "120s"
  tls:
    enabled: false
    cert_file: ""
    key_file: ""

# Database configuration
database:
  influxdb:
    url: "http://localhost:8086"
    token: "${INFLUXDB_TOKEN}"
    org: "sentinel-mesh"
    bucket: "metrics"
  elasticsearch:
    urls:
      - "http://localhost:9200"
    username: "${ELASTICSEARCH_USERNAME}"
    password: "${ELASTICSEARCH_PASSWORD}"
    index: "sentinel-logs"

# Kafka configuration
kafka:
  brokers:
    - "localhost:9092"
  topics:
    metrics: "metrics"
    logs: "logs"
    alerts: "alerts"
  group_id: "sentinel-mesh-dev"
  tls:
    enabled: false

# Redis configuration
redis:
  host: "localhost"
  port: 6379
  password: "${REDIS_PASSWORD}"
  db: 0

# Kubernetes configuration
kubernetes:
  in_cluster: false
  config_path: "${HOME}/.kube/config"
  namespace: "default"

# Monitoring configuration
monitoring:
  prometheus:
    enabled: true
    path: "/metrics"
    port: 9090
  jaeger:
    enabled: false
    service_name: "sentinel-mesh"
    endpoint: "http://localhost:14268/api/traces"

# Security configuration
security:
  jwt_secret: "${JWT_SECRET}"
  jwt_expiry: "24h"
  rate_limit:
    enabled: true
    rps: 100
    burst: 200
  cors:
    enabled: true
    origins:
      - "http://localhost:3000"
      - "http://localhost:8080"
    methods:
      - "GET"
      - "POST"
      - "PUT"
      - "DELETE"
      - "OPTIONS"
    headers:
      - "*"
    credentials: true

# ML configuration
ml:
  enabled: true
  service_url: "http://localhost:5000"
  model_path: "./ml/models"
  batch_size: 100
  threshold: 0.8
  anomaly_detection:
    contamination: 0.1
    window_size: 100
    algorithms:
      - "isolation_forest"
      - "autoencoder"
      - "lof"
      - "statistical"
  prediction:
    enabled: true
    horizon: "1h"
    models:
      - "arima"
      - "lstm"
      - "prophet"

# Logging configuration
logging:
  level: "debug"
  format: "json"
  output: "stdout"
  structured: true

# Feature flags
features:
  multi_cluster: true
  service_mesh_integration: true
  auto_scaling_recommendations: true
  security_correlation: true
  cost_optimization: true