---
apiVersion: v1
kind: Namespace
metadata:
  name: sentinel-mesh
---
# Redis Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: sentinel-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:8-alpine
        ports:
        - containerPort: 6379
        command: ["redis-server", "--appendonly", "yes"]
---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: sentinel-mesh
spec:
  ports:
  - port: 6379
    targetPort: 6379
  selector:
    app: redis
---
# InfluxDB Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: influxdb
  namespace: sentinel-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: influxdb
  template:
    metadata:
      labels:
        app: influxdb
    spec:
      containers:
      - name: influxdb
        image: influxdb:2.7-alpine
        ports:
        - containerPort: 8086
        env:
        - name: DOCKER_INFLUXDB_INIT_MODE
          value: "setup"
        - name: DOCKER_INFLUXDB_INIT_USERNAME
          value: "admin"
        - name: DOCKER_INFLUXDB_INIT_PASSWORD
          value: "password123"
        - name: DOCKER_INFLUXDB_INIT_ORG
          value: "sentinel-mesh"
        - name: DOCKER_INFLUXDB_INIT_BUCKET
          value: "metrics"
        - name: DOCKER_INFLUXDB_INIT_ADMIN_TOKEN
          value: "sentinel-mesh-token"
---
apiVersion: v1
kind: Service
metadata:
  name: influxdb
  namespace: sentinel-mesh
spec:
  ports:
  - port: 8086
    targetPort: 8086
  selector:
    app: influxdb
---
# Prometheus Deployment
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: sentinel-mesh
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
      external_labels:
        cluster: 'sentinel-mesh-k8s'

    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'collector'
        static_configs:
          - targets: ['collector:8080']
        metrics_path: '/metrics'

      - job_name: 'api'
        static_configs:
          - targets: ['api:8080']
        metrics_path: '/metrics'

      - job_name: 'ml-service'
        static_configs:
          - targets: ['ml-service:8000']
        metrics_path: '/metrics'
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: sentinel-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v3.7.2
        ports:
        - containerPort: 9090
        args:
          - '--config.file=/etc/prometheus/prometheus.yml'
          - '--storage.tsdb.path=/prometheus'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: sentinel-mesh
spec:
  type: NodePort
  ports:
  - port: 9090
    targetPort: 9090
    nodePort: 30090
  selector:
    app: prometheus
---
# Grafana Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: sentinel-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:12.2.1
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_USER
          value: "admin"
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_USERS_ALLOW_SIGN_UP
          value: "false"
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: sentinel-mesh
spec:
  type: NodePort
  ports:
  - port: 3000
    targetPort: 3000
    nodePort: 30030
  selector:
    app: grafana
---
# Collector Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: collector
  namespace: sentinel-mesh
spec:
  replicas: 2
  selector:
    matchLabels:
      app: collector
  template:
    metadata:
      labels:
        app: collector
    spec:
      containers:
      - name: collector
        image: sentinel-mesh/collector:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: INFLUXDB_URL
          value: "http://influxdb:8086"
        - name: INFLUXDB_TOKEN
          value: "sentinel-mesh-token"
        - name: INFLUXDB_ORG
          value: "sentinel-mesh"
        - name: INFLUXDB_BUCKET
          value: "metrics"
---
apiVersion: v1
kind: Service
metadata:
  name: collector
  namespace: sentinel-mesh
spec:
  ports:
  - port: 8080
    targetPort: 8080
  selector:
    app: collector
---
# API Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: sentinel-mesh
spec:
  replicas: 2
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      containers:
      - name: api
        image: sentinel-mesh/api:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
        env:
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: INFLUXDB_URL
          value: "http://influxdb:8086"
---
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: sentinel-mesh
spec:
  type: NodePort
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30080
  selector:
    app: api
---
# ML Service
apiVersion: apps/v1
kind: Deployment
metadata:
  name: ml-service
  namespace: sentinel-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: ml-service
  template:
    metadata:
      labels:
        app: ml-service
    spec:
      containers:
      - name: ml-service
        image: sentinel-mesh/ml-service:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8000
        env:
        - name: REDIS_URL
          value: "redis://redis:6379"
        - name: INFLUXDB_URL
          value: "http://influxdb:8086"
---
apiVersion: v1
kind: Service
metadata:
  name: ml-service
  namespace: sentinel-mesh
spec:
  ports:
  - port: 8000
    targetPort: 8000
  selector:
    app: ml-service
---
# Web Dashboard Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: web-dashboard
  namespace: sentinel-mesh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: web-dashboard
  template:
    metadata:
      labels:
        app: web-dashboard
    spec:
      containers:
      - name: web-dashboard
        image: sentinel-mesh-web:latest
        imagePullPolicy: Never
        ports:
        - containerPort: 8080
          name: http
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 200m
            memory: 128Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 30
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 10
---
# Web Dashboard Service
apiVersion: v1
kind: Service
metadata:
  name: web-dashboard
  namespace: sentinel-mesh
spec:
  type: NodePort
  selector:
    app: web-dashboard
  ports:
  - port: 8080
    targetPort: 8080
    nodePort: 30000
    protocol: TCP
    name: http
